% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/in-convex-hull.R
\name{in_convex_hull}
\alias{in_convex_hull}
\title{In convex hull}
\usage{
in_convex_hull(hull = NULL, test_points = NULL)
}
\arguments{
\item{hull}{A convex hull list object created by \code{\link{convex_hull}}}

\item{test_points}{a \eqn{n}-by-\eqn{d} dataframe or matrix. The rows
represent \eqn{n} points and the \eqn{d} columns the coordinates in 
\eqn{d}-dimensional space.}
}
\value{
A \eqn{n} length vector containing \code{TRUE} if test point \eqn{n} 
lies within the hull and \code{FALSE} if it lies outside the hull.
}
\description{
Given a \eqn{d}-dimensional 
\href{https://en.wikipedia.org/wiki/Convex_hull}{convex hull} this function 
checks to see which of a set of \eqn{n} test points are within the convex 
hull.  This function uses the \href{http://www.qhull.org}{Qhull} library.
}
\examples{
# Define points to create the convex hull
x <- c(30, 70, 20, 50, 40, 70)
y <- c(35, 80, 70, 50, 60, 20)
p <- data.frame(x, y)
ch <- convex_hull(points = p)
plot(p, pch = as.character(seq(nrow(p))), xlim=c(0,100), ylim=c(0,100))
for (e in seq(nrow(ch$hull_edges))) {
  lines(ch$input_points[ch$hull_edges[e, ], ], col = "red")
}
# Check if some test points are in the convex hull
p_test <- data.frame(c(20, 50, 60, 90), c(20, 60, 60, 40))
points(p_test[,1], p_test[,2], pch=c("1", "2", "3", "4"), col="blue")
legend("topright", legend = c("input points", "test points"), 
       text.col=c("black", "blue"), title = "Indicies for:", bty="n")
p_test_hull <- in_convex_hull(hull = ch, test_points = p_test)
print(p_test_hull)

}
\references{
Barber CB, Dobkin DP, Huhdanpaa H (1996) The Quickhull algorithm 
for convex hulls. ACM Transactions on Mathematical Software, 22(4):469-83 
\url{https://doi.org/10.1145/235815.235821}.
}
\seealso{
\code{\link{convex_hull}}
}

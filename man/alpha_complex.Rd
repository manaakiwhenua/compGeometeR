% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alpha-complex.R
\name{alpha_complex}
\alias{alpha_complex}
\title{Alpha complex}
\usage{
alpha_complex(points = NULL, alpha = Inf)
}
\arguments{
\item{points}{a \eqn{n}-by-\eqn{d} dataframe or matrix. The rows
represent \eqn{n} points and the \eqn{d} columns the coordinates in 
\eqn{d}-dimensional space.}

\item{alpha}{a real number between zero and infinity that defines the maximum 
circumradii for a simplex to be included in the alpha complex.  If 
unspecified \code{alpha} defaults to infinity and the alpha complex is 
equivalent to a Delaunay triangulation.}
}
\value{
Returns a list consisting of:

\itemize{
  \item \code{input_points}: the input points used to create the Voronoi 
  diagram.
  \item \code{simplices}: a \eqn{s}-by-\eqn{d+1} matrix of point indices 
  that define the \eqn{s} \href{https://en.wikipedia.org/wiki/Simplex}{simplices} 
  that make up the alpha complex.
  \item \code{circumcentres}: a \eqn{s}-by-\eqn{d} matrix of coordinates 
  that define the centre of the 
  \href{https://en.wikipedia.org/wiki/Circumscribed_circle}{circumcircle} 
  associated with each simplex.
  \item \code{circumradii}: the radius of each circumcircle.
}
}
\description{
This function calculates the 
\href{https://en.wikipedia.org/wiki/Alpha_shape#Alpha_complex}{alpha complex} 
of a set of \eqn{n} points in \eqn{d}-dimensional space using the
\href{http://www.qhull.org}{Qhull} library.
}
\examples{
# Define points
x <- c(30, 70, 20, 50, 40, 70)
y <- c(35, 80, 70, 50, 60, 20)
p <- data.frame(x, y)
# Create alpha complex and plot
a_complex <- alpha_complex(points = p, alpha = 20)
plot(p, pch = as.character(seq(nrow(p))), xlim=c(0,80), ylim=c(10,90), asp=1)
for (s in seq(nrow(a_complex$simplices))) {
  polygon(a_complex$input_points[a_complex$simplices[s,],], border="red")
}
text(a_complex$circumcentres, labels=seq(nrow(a_complex$simplices)), col="blue")
symbols(a_complex$circumcentres, circles = a_complex$circumradii, 
        inches = FALSE, add = TRUE, fg="blue", lty="dotted")

}
\references{
Barber CB, Dobkin DP, Huhdanpaa H (1996) The Quickhull algorithm 
for convex hulls. ACM Transactions on Mathematical Software, 22(4):469-83 
\url{https://doi.org/10.1145/235815.235821}.

Edelsbrunner H, MÃ¼cke EP (1994) Three-dimensional alpha shapes. ACM 
Transactions on Graphics, 13(1):43-72 
\url{https://dl.acm.org/doi/abs/10.1145/174462.156635}.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/digital-convex-hull.R
\name{digital_convex_hull}
\alias{digital_convex_hull}
\title{Digital convex hull}
\usage{
digital_convex_hull(points = NULL, mins, maxs, spacings)
}
\arguments{
\item{points}{a \eqn{n}-by-\eqn{d} dataframe or matrix. The rows
represent \eqn{n} points and the \eqn{d} columns the coordinates in 
\eqn{d}-dimensional space.}

\item{mins}{Vector of length \code{d} listing the grid coordinate minimum for 
each dimension.}

\item{maxs}{Vector of length \code{d} listing the grid coordinate maximum for 
each dimension.}

\item{spacings}{Vector of length \code{d} listing the grid coordinate spacing 
for each dimension.}
}
\value{
A list of three objects:

\itemize{
  \item A \eqn{d}-dimensional array containing 1 if a grid coordinate lies 
  within the hull and 0 if it lies outside the hull (if any of the test point 
  coordinates contain NA then the output is 0).
  \item A dataframe with \code{d} columns and a row for each grid coordinate 
  - so potentially lots of rows!
  \item A list of length \code{d} that contains the grid coordinates along 
  each dimension.
}
}
\description{
This function calculates the digital 
\href{https://en.wikipedia.org/wiki/Convex_hull}{convex hull} around a set of
\eqn{n} points in \eqn{d}-dimensional space based upon a grid of 
\eqn{d}-dimensional coordinates.
}
\examples{
# Define points
x <- c(30, 70, 20, 50, 40, 70)
y <- c(35, 80, 70, 50, 60, 20)
p <- data.frame(x, y)
# Create digital convex hull and plot
d_ch <- digital_convex_hull(points = p, mins=c(15,15), maxs=c(85,85), spacings=c(0.5,0.5))
image(x=d_ch[[3]][[1]], y=d_ch[[3]][[2]], z=d_ch[[1]], xlab="x", ylab="y")
points(p, pch = as.character(seq(nrow(p))))

}
